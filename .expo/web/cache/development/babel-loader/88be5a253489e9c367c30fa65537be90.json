{"ast":null,"code":"var _jsxFileName = \"/Users/ohtakikenji/Documents/GitHub/news-app/src/navigation/screens/ArticleScreen.tsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { WebView } from 'react-native-webview';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addClip, deleteClip } from \"../../store/actions/user\";\nimport ClipButton from \"./components/ClipButton\";\nimport Loading from \"./components/Loading\";\nexport default (function (_ref) {\n  var route = _ref.route;\n  var article = route.params.article;\n  var dispatch = useDispatch();\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var clips = user.clips;\n\n  var isClipped = function isClipped() {\n    return clips.some(function (clip) {\n      return clip.url === article.url;\n    });\n  };\n\n  var toggleClip = function toggleClip() {\n    if (isClipped()) {\n      dispatch(deleteClip({\n        clip: article\n      }));\n    } else {\n      dispatch(addClip({\n        clip: article\n      }));\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(ClipButton, {\n    onPress: toggleClip,\n    enabled: isClipped(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(WebView, {\n    source: {\n      uri: article.url\n    },\n    startInLoadingState: true,\n    renderLoading: function renderLoading() {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 30\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF'\n  }\n});","map":{"version":3,"sources":["/Users/ohtakikenji/Documents/GitHub/news-app/src/navigation/screens/ArticleScreen.tsx"],"names":["React","WebView","useDispatch","useSelector","addClip","deleteClip","ClipButton","Loading","route","article","params","dispatch","user","state","clips","isClipped","some","clip","url","toggleClip","styles","container","uri","StyleSheet","create","flex","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,UAAlB;AACA,OAAOC,UAAP;AACA,OAAOC,OAAP;AAEA,gBAAe,gBAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAAA,MACpBC,OADoB,GACRD,KAAK,CAACE,MADE,CACpBD,OADoB;AAE5B,MAAME,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,IAAI,GAAGT,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACD,IAAjB;AAAA,GAAD,CAAxB;AAH4B,MAIpBE,KAJoB,GAIVF,IAJU,CAIpBE,KAJoB;;AAK5B,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,WAAOD,KAAK,CAACE,IAAN,CAAW,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,GAAL,KAAaT,OAAO,CAACS,GAA/B;AAAA,KAAX,CAAP;AACD,GAFD;;AAGA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIJ,SAAS,EAAb,EAAiB;AACfJ,MAAAA,QAAQ,CAACN,UAAU,CAAC;AAAEY,QAAAA,IAAI,EAAER;AAAR,OAAD,CAAX,CAAR;AACD,KAFD,MAEO;AACLE,MAAAA,QAAQ,CAACP,OAAO,CAAC;AAAEa,QAAAA,IAAI,EAAER;AAAR,OAAD,CAAR,CAAR;AACD;AACF,GAND;;AAQA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEW,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEF,UAArB;AAAiC,IAAA,OAAO,EAAEJ,SAAS,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AACE,IAAA,MAAM,EAAE;AAAEO,MAAAA,GAAG,EAAEb,OAAO,CAACS;AAAf,KADV;AAEE,IAAA,mBAAmB,EAAE,IAFvB;AAGE,IAAA,aAAa,EAAE;AAAA,aAAM,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD,CA1BD;AA2BA,IAAME,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, SafeAreaView, Text, TouchableOpacity } from 'react-native';\nimport { WebView } from 'react-native-webview';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addClip, deleteClip } from '../../store/actions/user';\nimport ClipButton from './components/ClipButton';\nimport Loading from './components/Loading';\n\nexport default ({ route }) => {\n  const { article } = route.params;\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user);\n  const { clips } = user;\n  const isClipped = () => {\n    return clips.some((clip) => clip.url === article.url);\n  };\n  const toggleClip = () => {\n    if (isClipped()) {\n      dispatch(deleteClip({ clip: article }));\n    } else {\n      dispatch(addClip({ clip: article }));\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ClipButton onPress={toggleClip} enabled={isClipped()} />\n      <WebView\n        source={{ uri: article.url }}\n        startInLoadingState={true}\n        renderLoading={() => <Loading />}\n      />\n    </SafeAreaView>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}