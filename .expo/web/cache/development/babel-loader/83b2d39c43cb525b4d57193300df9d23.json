{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ohtakikenji/Documents/GitHub/news-app/src/navigation/screens/HomeScreen.tsx\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport axios from 'axios';\nimport Constants from 'expo-constants';\nimport ListItem from \"./components/ListItem\";\nimport Loading from \"./components/Loading\";\nvar URL = \"http://newsapi.org/v2/top-headlines?country=jp&apiKey=\" + Constants.manifest.extra.newsApiKey;\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      articles = _useState2[0],\n      setArticles = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    fetchArticles();\n  }, []);\n\n  var fetchArticles = function fetchArticles() {\n    var response;\n    return _regeneratorRuntime.async(function fetchArticles$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(URL));\n\n          case 4:\n            response = _context.sent;\n            setArticles(response.data.articles);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 11:\n            setLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: [styles.container, styles.AndroidSafeArea],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: articles,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ListItem, {\n        imageUrl: item.urlToImage,\n        title: item.title,\n        author: item.author,\n        onPress: function onPress() {\n          return navigation.navigate('Article', {\n            article: item\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), loading && React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }));\n});\nvar styles = StyleSheet.create({\n  AndroidSafeArea: {\n    flex: 1,\n    backgroundColor: 'white',\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"sources":["/Users/ohtakikenji/Documents/GitHub/news-app/src/navigation/screens/HomeScreen.tsx"],"names":["StatusBar","React","useState","useEffect","axios","Constants","ListItem","Loading","URL","manifest","extra","newsApiKey","navigation","articles","setArticles","loading","setLoading","fetchArticles","get","response","data","console","log","styles","container","AndroidSafeArea","item","urlToImage","title","author","navigate","article","index","toString","StyleSheet","create","flex","backgroundColor","paddingTop","Platform","OS","currentHeight"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AASA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,OAAOC,QAAP;AACA,OAAOC,OAAP;AAEA,IAAMC,GAAW,8DAA4DH,SAAS,CAACI,QAAV,CAAmBC,KAAnB,CAAyBC,UAAtG;AAEA,gBAAe,gBAAyC;AAAA,MAAtCC,UAAsC,QAAtCA,UAAsC;;AAAA,kBACtBV,QAAQ,CAAC,EAAD,CADc;AAAA;AAAA,MAC/CW,QAD+C;AAAA,MACrCC,WADqC;;AAAA,mBAExBZ,QAAQ,CAAC,KAAD,CAFgB;AAAA;AAAA,MAE/Ca,OAF+C;AAAA,MAEtCC,UAFsC;;AAGtDb,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBD,YAAAA,UAAU,CAAC,IAAD,CAAV;AADoB;AAAA;AAAA,6CAGKZ,KAAK,CAACc,GAAN,CAAUV,GAAV,CAHL;;AAAA;AAGZW,YAAAA,QAHY;AAIlBL,YAAAA,WAAW,CAACK,QAAQ,CAACC,IAAT,CAAcP,QAAf,CAAX;AAJkB;AAAA;;AAAA;AAAA;AAAA;AAMlBQ,YAAAA,OAAO,CAACC,GAAR;;AANkB;AAQpBN,YAAAA,UAAU,CAAC,KAAD,CAAV;;AARoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAWA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE,CAACO,MAAM,CAACC,SAAR,EAAmBD,MAAM,CAACE,eAA1B,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEZ,QADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGa,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAEA,IAAI,CAACC,UADjB;AAEE,QAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,QAAA,MAAM,EAAEF,IAAI,CAACG,MAHf;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAMjB,UAAU,CAACkB,QAAX,CAAoB,SAApB,EAA+B;AAAEC,YAAAA,OAAO,EAAEL;AAAX,WAA/B,CAAN;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAFd;AAUE,IAAA,YAAY,EAAE,sBAACA,IAAD,EAAOM,KAAP;AAAA,aAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,KAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaGlB,OAAO,IAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbd,CADF;AAiBD,CAnCD;AAqCA,IAAMQ,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,eAAe,EAAE;AACfW,IAAAA,IAAI,EAAE,CADS;AAEfC,IAAAA,eAAe,EAAE,OAFF;AAGfC,IAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4BxC,SAAS,CAACyC,aAAtC,GAAsD;AAHnD,GADc;AAM/BjB,EAAAA,SAAS,EAAE;AACTY,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR;AANoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  View,\n  FlatList,\n  SafeAreaView,\n  Platform,\n} from 'react-native';\n\nimport axios from 'axios';\nimport Constants from 'expo-constants';\n\nimport ListItem from './components/ListItem';\nimport Loading from './components/Loading';\n\nconst URL: string = `http://newsapi.org/v2/top-headlines?country=jp&apiKey=${Constants.manifest.extra.newsApiKey}`;\n\nexport default ({ navigation }: { navigation: any }) => {\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchArticles();\n  }, []);\n\n  const fetchArticles = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(URL);\n      setArticles(response.data.articles);\n    } catch (e) {\n      console.log(e);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <SafeAreaView style={[styles.container, styles.AndroidSafeArea]}>\n      <FlatList\n        data={articles}\n        renderItem={({ item }: { item: any }) => (\n          <ListItem\n            imageUrl={item.urlToImage}\n            title={item.title}\n            author={item.author}\n            onPress={() => navigation.navigate('Article', { article: item })}\n          />\n        )}\n        keyExtractor={(item, index) => index.toString()}\n      />\n      {loading && <Loading />}\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  AndroidSafeArea: {\n    flex: 1,\n    backgroundColor: 'white',\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}